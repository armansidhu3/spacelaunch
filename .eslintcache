[{"E:\\1. Projects\\rocket-launch\\src\\index.js":"1","E:\\1. Projects\\rocket-launch\\src\\App.js":"2","E:\\1. Projects\\rocket-launch\\src\\reportWebVitals.js":"3","E:\\1. Projects\\rocket-launch\\src\\components\\Wrapper.js":"4","E:\\1. Projects\\rocket-launch\\src\\components\\Main.js":"5","E:\\1. Projects\\rocket-launch\\src\\components\\Header.js":"6","E:\\1. Projects\\rocket-launch\\src\\components\\Content.js":"7","E:\\1. Projects\\rocket-launch\\src\\components\\Launch.js":"8","E:\\1. Projects\\rocket-launch\\src\\components\\Button.js":"9","E:\\1. Projects\\rocket-launch\\src\\components\\Countdown.js":"10","E:\\1. Projects\\rocket-launch\\src\\components\\CountdownBox.js":"11","E:\\1. Projects\\rocket-launch\\src\\helpers\\daysInYear.js":"12"},{"size":180,"mtime":1609696655086,"results":"13","hashOfConfig":"14"},{"size":183,"mtime":1609696696480,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"17"},{"size":191,"mtime":1609781693112,"results":"18","hashOfConfig":"14"},{"size":877,"mtime":1610830649442,"results":"19","hashOfConfig":"14"},{"size":192,"mtime":1609859307304,"results":"20","hashOfConfig":"14"},{"size":196,"mtime":1609770020046,"results":"21","hashOfConfig":"14"},{"size":2204,"mtime":1610995932234,"results":"22","hashOfConfig":"14"},{"size":194,"mtime":1609700699262,"results":"23","hashOfConfig":"14"},{"size":3491,"mtime":1610825006478,"results":"24","hashOfConfig":"14"},{"size":1057,"mtime":1599296532000,"results":"25","hashOfConfig":"14"},{"size":168,"mtime":1599296532000,"results":"26","hashOfConfig":"14"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"w6xjcu",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6nwvz9",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"29"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"29"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"29"},"E:\\1. Projects\\rocket-launch\\src\\index.js",[],["56","57"],"E:\\1. Projects\\rocket-launch\\src\\App.js",[],"E:\\1. Projects\\rocket-launch\\src\\reportWebVitals.js",[],"E:\\1. Projects\\rocket-launch\\src\\components\\Wrapper.js",[],"E:\\1. Projects\\rocket-launch\\src\\components\\Main.js",["58","59","60"],"import React, {useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport Header from \"./Header\";\r\nimport Content from \"./Content\";\r\nimport Launch from \"./Launch\";\r\nimport Button from \"./Button\";\r\nimport Countdown from \"./Countdown\";\r\n\r\nconst Main = () => {\r\n    const [launch, setLaunch] = useState();\r\n\r\n    const api_call = async () => {\r\n        const url = `https://spacelaunchnow.me/api/3.5.0/launch/upcoming/?limit=20`;\r\n        const request = axios.get(url);\r\n        const response = await request;\r\n\r\n        console.log(response.data.results)\r\n\r\n        setLaunch(response.data.results);\r\n    }\r\n\r\n    useEffect(api_call, []);\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <Content>\r\n                {launch && <Launch launch={launch}/>}\r\n            </Content>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;","E:\\1. Projects\\rocket-launch\\src\\components\\Header.js",[],"E:\\1. Projects\\rocket-launch\\src\\components\\Content.js",[],"E:\\1. Projects\\rocket-launch\\src\\components\\Launch.js",["61","62","63","64","65","66","67"],"import React from \"react\";\r\nimport Countdown from \"./Countdown\";\r\n\r\nconst Launch = ({launch}) => {\r\n    var months = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \r\n           \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ];\r\n\r\n    let records = {};\r\n\r\n    // var selectedMonthName = months[value['month']];\r\n    let year, month, day, time;    \r\n    var d;\r\n\r\n    // launch.forEach(bla);\r\n\r\n    function parseDate(i) {\r\n\r\n    d = new Date(i.net)\r\n    return months[d.getUTCMonth()] + \" \" + d.getUTCDate() + \" \" + d.getUTCFullYear() + \" \" + d.getUTCHours() + \":\" + d.getUTCMinutes() + \" UTC\";\r\n    }\r\n\r\n    function localDate(i) {\r\n        d = new Date(i.net)\r\n        return months[d.getMonth()] + \" \" + d.getDate() + \" \" + d.getFullYear() + \" | \" + formatAMPM(d);\r\n    }\r\n\r\n    \r\n    function formatAMPM(date) {\r\n        var hours = date.getHours();\r\n        var minutes = date.getMinutes();\r\n        var ampm = hours >= 12 ? 'pm' : 'am';\r\n        hours = hours % 12;\r\n        hours = hours ? hours : 12; // the hour '0' should be '12'\r\n        minutes = minutes < 10 ? '0'+minutes : minutes;\r\n        var strTime = hours + ':' + minutes + ' ' + ampm;\r\n        return strTime;\r\n    }\r\n    \r\n    function parseDescription(index) {\r\n        if (launch[index].mission != null) return launch[index].mission.description;\r\n        return \"\";\r\n    }\r\n\r\n    return (\r\n        <div className=\"launch\">\r\n            {launch.map((i, index) => \r\n            {\r\n                if (i.image != null && new Date(i.net) > new Date()) {\r\n                    return ( \r\n                <div className=\"rockets\">\r\n                 <h2>{i.name}</h2>\r\n                <img width=\"500px\" src={i.image}></img>\r\n                <p>{i.launch_service_provider.name}</p>\r\n                <p>{i.pad.name}</p>\r\n                <div className=\"description\">\r\n                    {parseDescription(index)}\r\n                </div>\r\n                <p>Time until: {localDate(i)}</p>\r\n                { <Countdown date={parseDate(i)} /> }\r\n                </div>\r\n                    )\r\n                }\r\n            }\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Launch;","E:\\1. Projects\\rocket-launch\\src\\components\\Button.js",[],"E:\\1. Projects\\rocket-launch\\src\\components\\Countdown.js",["68","69"],"import React, { useState, useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport daysInYear from '../helpers/daysInYear';\nimport CountdownBox from './CountdownBox';\n\n\n\nconst Countdown = ({ date }) => {\n  let interval;\n\n  const now = new Date();\n  const selectedDate = new Date(date);\n  const millisecondsLeft = selectedDate.getTime() - now.getTime();\n  const dLeft = Math.floor(millisecondsLeft / (1000 * 60 * 60 * 24));\n  const daysInSelectedYear = daysInYear(selectedDate.getFullYear());\n\n  const yearsLeft = Math.floor(dLeft / daysInSelectedYear);\n  const daysLeft = dLeft <= 0 ? 0 : dLeft - (yearsLeft * daysInSelectedYear);\n  const hoursLeft = Math.floor((millisecondsLeft / (1000 * 60 * 60)) % 24);\n  const minutesLeft = Math.floor((millisecondsLeft / (1000 * 60)) % 60);\n  const secondsLeft = Math.floor((millisecondsLeft / 1000) % 60);\n\n  const yearsLeftOutput = yearsLeft < 10 ? '0' + yearsLeft : yearsLeft;\n  const daysLeftOutput = daysLeft < 10 ? '0' + daysLeft : daysLeft;\n  const hoursLeftOutput = hoursLeft < 10 ? '0' + hoursLeft : hoursLeft;\n  const minutesLeftOutput = minutesLeft < 10 ? '0' + minutesLeft : minutesLeft;\n  const secondsLeftOutput = secondsLeft < 10 ? '0' + secondsLeft : secondsLeft;\n  \n  const [completed, setCompleted] = useState(false);\n  const [timeLeft, setTimeLeft] = useState({\n    years: yearsLeft > 0 ? yearsLeftOutput : '00',\n    days: daysLeft > 0 ? daysLeftOutput : '00',\n    hours: hoursLeft > 0 ? hoursLeftOutput : '00',\n    minutes: minutesLeft > 0 ? minutesLeftOutput : '00',\n    seconds: secondsLeft > 0 ? secondsLeftOutput : '00'\n  });\n\n\n  useEffect(() => { \n    if(completed) {\n      clearInterval(interval);\n    }\n  }, [completed]);\n\n  useEffect(() => {\n    if(!completed) {\n      interval = setInterval(() => {\n        if(millisecondsLeft > 0) {\n          setTimeLeft({\n            years: yearsLeftOutput,\n            days: daysLeftOutput,\n            hours: hoursLeftOutput,\n            minutes: minutesLeftOutput,\n            seconds: secondsLeftOutput\n          });\n        }else {\n          setTimeLeft({\n            years: '00',\n            days: '00',\n            hours: '00',\n            minutes: '00',\n            seconds: '00'\n          });\n          setCompleted(true);\n        }\n      }, 1000);\n    }\n\n    return () => {\n      clearInterval(interval);\n    }\n  }, [selectedDate, now, completed, yearsLeft, daysLeft, hoursLeft, minutesLeft, secondsLeft, millisecondsLeft, yearsLeftOutput, daysLeftOutput, hoursLeftOutput, minutesLeftOutput, secondsLeftOutput]);\n\n  return(\n    <Fragment>\n      {/* <p>Time until: <span>{date}</span></p> */}\n      <div className=\"countdown\">\n        {timeLeft.years > 0 && <CountdownBox \n          left={timeLeft.years}\n          divideBy={Math.floor(timeLeft.years) / 100 === 0 ? 100 : (Math.floor((timeLeft.years / 100) + 100))}\n          label=\"years\"\n        />}\n        <CountdownBox \n          left={timeLeft.days}\n          divideBy={daysInSelectedYear}\n          label=\"days\"\n        />\n        <CountdownBox \n          left={timeLeft.hours}\n          divideBy={24}\n          label=\"hours\"\n        />\n        <CountdownBox \n          left={timeLeft.minutes}\n          divideBy={60}\n          label=\"minutes\"\n        />\n        <CountdownBox \n          left={timeLeft.seconds}\n          divideBy={60}\n          label=\"seconds\"\n        />\n      </div>\n    </Fragment>\n  );\n}\n\nCountdown.propTypes = {\n  date: PropTypes.string.isRequired\n}\n\nexport default Countdown;","E:\\1. Projects\\rocket-launch\\src\\components\\CountdownBox.js",[],"E:\\1. Projects\\rocket-launch\\src\\helpers\\daysInYear.js",["70"],"const isLeapYear = (year) => {\n  return year % 400 === 0 || (year % 100 !== 0 && year % 4 === 0);\n}\n\nexport default (year) => {\n  return isLeapYear(year) ? 366 : 365;\n}",{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":7,"column":8,"nodeType":"77","messageId":"78","endLine":7,"endColumn":14},{"ruleId":"75","severity":1,"message":"79","line":8,"column":8,"nodeType":"77","messageId":"78","endLine":8,"endColumn":17},{"ruleId":"80","severity":1,"message":"81","line":13,"column":22,"nodeType":"82","endLine":21,"endColumn":6},{"ruleId":"75","severity":1,"message":"83","line":8,"column":9,"nodeType":"77","messageId":"78","endLine":8,"endColumn":16},{"ruleId":"75","severity":1,"message":"84","line":11,"column":9,"nodeType":"77","messageId":"78","endLine":11,"endColumn":13},{"ruleId":"75","severity":1,"message":"85","line":11,"column":15,"nodeType":"77","messageId":"78","endLine":11,"endColumn":20},{"ruleId":"75","severity":1,"message":"86","line":11,"column":22,"nodeType":"77","messageId":"78","endLine":11,"endColumn":25},{"ruleId":"75","severity":1,"message":"87","line":11,"column":27,"nodeType":"77","messageId":"78","endLine":11,"endColumn":31},{"ruleId":"88","severity":1,"message":"89","line":46,"column":36,"nodeType":"82","messageId":"90","endLine":46,"endColumn":38},{"ruleId":"91","severity":1,"message":"92","line":52,"column":17,"nodeType":"93","endLine":52,"endColumn":50},{"ruleId":"80","severity":1,"message":"94","line":44,"column":6,"nodeType":"95","endLine":44,"endColumn":17,"suggestions":"96"},{"ruleId":"80","severity":1,"message":"97","line":48,"column":18,"nodeType":"98","endLine":67,"endColumn":15},{"ruleId":"99","severity":1,"message":"100","line":5,"column":1,"nodeType":"101","endLine":7,"endColumn":2},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Countdown' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'records' is assigned a value but never used.","'year' is defined but never used.","'month' is defined but never used.","'day' is defined but never used.","'time' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'interval'. Either include it or remove the dependency array.","ArrayExpression",["104"],"Assignments to the 'interval' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},"Update the dependencies array to be: [completed, interval]",{"range":"107","text":"108"},[1697,1708],"[completed, interval]"]