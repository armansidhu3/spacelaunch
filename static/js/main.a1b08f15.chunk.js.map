{"version":3,"sources":["components/Wrapper.js","components/Header.js","components/Content.js","components/CountdownBox.js","components/Countdown.js","helpers/daysInYear.js","components/Launch.js","components/Main.js","App.js","index.js"],"names":["Wrapper","props","className","children","Header","Content","CountdownBox","left","divideBy","label","height","width","stroke","strokeWidth","r","cx","cy","strokeDashoffset","Math","PI","strokeDasharray","Countdown","interval","date","now","Date","selectedDate","millisecondsLeft","getTime","dLeft","floor","daysInSelectedYear","year","isLeapYear","getFullYear","yearsLeft","daysLeft","hoursLeft","minutesLeft","secondsLeft","yearsLeftOutput","daysLeftOutput","hoursLeftOutput","minutesLeftOutput","secondsLeftOutput","useState","completed","setCompleted","years","days","hours","minutes","seconds","timeLeft","setTimeLeft","useEffect","clearInterval","setInterval","Launch","d","launch","months","parseDate","i","net","getUTCMonth","getUTCDate","getUTCFullYear","getUTCHours","getUTCMinutes","localDate","getMonth","getDate","getHours","getMinutes","ampm","formatAMPM","parseDescription","index","mission","description","map","image","name","src","launch_service_provider","pad","Main","setLaunch","api_call","a","request","axios","get","response","console","log","data","results","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1b08f15.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Wrapper = (props) => {\r\n    return (\r\n        <div className=\"wrapper\">\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Wrapper;","import React from \"react\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>Space Launch</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n\r\n","import React from \"react\";\r\n\r\nconst Content = (props) => {\r\n    return (\r\n        <div className=\"content\">\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Content;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CountdownBox = ({ left, divideBy, label }) => {\n  return(\n    <div className=\"countdown__box\">\n      <div className=\"countdown__box_circles\">\n        <svg height=\"110\" width=\"110\">\n          <circle \n            stroke=\"#1df9ba\"\n            strokeWidth=\"9\"\n            r=\"47\"\n            cx=\"55\"\n            cy=\"55\"\n          />\n          <circle \n            stroke=\"#058862\"\n            strokeDashoffset={-((left / divideBy) * 47 * 2 * Math.PI) + 47 * 2 * Math.PI}\n            strokeDasharray={47 * 2 * Math.PI}\n            strokeWidth=\"3\"\n            r=\"47\"\n            cx=\"55\"\n            cy=\"55\"\n          />\n        </svg>\n        <div className=\"countdown__box_left\">{left}</div>\n      </div>\n      <p className=\"countdown__box_label\">{label}</p>\n    </div>\n  );\n}\n\nCountdownBox.propTypes = {\n  left: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  divideBy: PropTypes.number.isRequired,\n  label: PropTypes.string.isRequired\n}\n\nexport default CountdownBox;","import React, { useState, useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport daysInYear from '../helpers/daysInYear';\nimport CountdownBox from './CountdownBox';\n\n\n\nconst Countdown = ({ date }) => {\n  let interval;\n\n  const now = new Date();\n  const selectedDate = new Date(date);\n  const millisecondsLeft = selectedDate.getTime() - now.getTime();\n  const dLeft = Math.floor(millisecondsLeft / (1000 * 60 * 60 * 24));\n  const daysInSelectedYear = daysInYear(selectedDate.getFullYear());\n\n  const yearsLeft = Math.floor(dLeft / daysInSelectedYear);\n  const daysLeft = dLeft <= 0 ? 0 : dLeft - (yearsLeft * daysInSelectedYear);\n  const hoursLeft = Math.floor((millisecondsLeft / (1000 * 60 * 60)) % 24);\n  const minutesLeft = Math.floor((millisecondsLeft / (1000 * 60)) % 60);\n  const secondsLeft = Math.floor((millisecondsLeft / 1000) % 60);\n\n  const yearsLeftOutput = yearsLeft < 10 ? '0' + yearsLeft : yearsLeft;\n  const daysLeftOutput = daysLeft < 10 ? '0' + daysLeft : daysLeft;\n  const hoursLeftOutput = hoursLeft < 10 ? '0' + hoursLeft : hoursLeft;\n  const minutesLeftOutput = minutesLeft < 10 ? '0' + minutesLeft : minutesLeft;\n  const secondsLeftOutput = secondsLeft < 10 ? '0' + secondsLeft : secondsLeft;\n  \n  const [completed, setCompleted] = useState(false);\n  const [timeLeft, setTimeLeft] = useState({\n    years: yearsLeft > 0 ? yearsLeftOutput : '00',\n    days: daysLeft > 0 ? daysLeftOutput : '00',\n    hours: hoursLeft > 0 ? hoursLeftOutput : '00',\n    minutes: minutesLeft > 0 ? minutesLeftOutput : '00',\n    seconds: secondsLeft > 0 ? secondsLeftOutput : '00'\n  });\n\n\n  useEffect(() => { \n    if(completed) {\n      clearInterval(interval);\n    }\n  }, [completed]);\n\n  useEffect(() => {\n    if(!completed) {\n      interval = setInterval(() => {\n        if(millisecondsLeft > 0) {\n          setTimeLeft({\n            years: yearsLeftOutput,\n            days: daysLeftOutput,\n            hours: hoursLeftOutput,\n            minutes: minutesLeftOutput,\n            seconds: secondsLeftOutput\n          });\n        }else {\n          setTimeLeft({\n            years: '00',\n            days: '00',\n            hours: '00',\n            minutes: '00',\n            seconds: '00'\n          });\n          setCompleted(true);\n        }\n      }, 1000);\n    }\n\n    return () => {\n      clearInterval(interval);\n    }\n  }, [selectedDate, now, completed, yearsLeft, daysLeft, hoursLeft, minutesLeft, secondsLeft, millisecondsLeft, yearsLeftOutput, daysLeftOutput, hoursLeftOutput, minutesLeftOutput, secondsLeftOutput]);\n\n  return(\n    <Fragment>\n      {/* <p>Time until: <span>{date}</span></p> */}\n      <div className=\"countdown\">\n        {timeLeft.years > 0 && <CountdownBox \n          left={timeLeft.years}\n          divideBy={Math.floor(timeLeft.years) / 100 === 0 ? 100 : (Math.floor((timeLeft.years / 100) + 100))}\n          label=\"years\"\n        />}\n        <CountdownBox \n          left={timeLeft.days}\n          divideBy={daysInSelectedYear}\n          label=\"days\"\n        />\n        <CountdownBox \n          left={timeLeft.hours}\n          divideBy={24}\n          label=\"hours\"\n        />\n        <CountdownBox \n          left={timeLeft.minutes}\n          divideBy={60}\n          label=\"minutes\"\n        />\n        <CountdownBox \n          left={timeLeft.seconds}\n          divideBy={60}\n          label=\"seconds\"\n        />\n      </div>\n    </Fragment>\n  );\n}\n\nCountdown.propTypes = {\n  date: PropTypes.string.isRequired\n}\n\nexport default Countdown;","const isLeapYear = (year) => {\n  return year % 400 === 0 || (year % 100 !== 0 && year % 4 === 0);\n}\n\nexport default (year) => {\n  return isLeapYear(year) ? 366 : 365;\n}","import React from \"react\";\r\nimport Countdown from \"./Countdown\";\r\n\r\nconst Launch = ({launch}) => {\r\n    var months = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \r\n           \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ];\r\n\r\n    let records = {};\r\n\r\n    // var selectedMonthName = months[value['month']];\r\n    let year, month, day, time;    \r\n    var d;\r\n\r\n    // launch.forEach(bla);\r\n\r\n    function parseDate(i) {\r\n\r\n    d = new Date(i.net)\r\n    return months[d.getUTCMonth()] + \" \" + d.getUTCDate() + \" \" + d.getUTCFullYear() + \" \" + d.getUTCHours() + \":\" + d.getUTCMinutes() + \" UTC\";\r\n    }\r\n\r\n    function localDate(i) {\r\n        d = new Date(i.net)\r\n        return months[d.getMonth()] + \" \" + d.getDate() + \" \" + d.getFullYear() + \" | \" + formatAMPM(d);\r\n    }\r\n\r\n    \r\n    function formatAMPM(date) {\r\n        var hours = date.getHours();\r\n        var minutes = date.getMinutes();\r\n        var ampm = hours >= 12 ? 'pm' : 'am';\r\n        hours = hours % 12;\r\n        hours = hours ? hours : 12; // the hour '0' should be '12'\r\n        minutes = minutes < 10 ? '0'+minutes : minutes;\r\n        var strTime = hours + ':' + minutes + ' ' + ampm;\r\n        return strTime;\r\n    }\r\n    \r\n    function parseDescription(index) {\r\n        if (launch[index].mission != null) return launch[index].mission.description;\r\n        return \"\";\r\n    }\r\n\r\n    return (\r\n        <div className=\"launch\">\r\n            {launch.map((i, index) => \r\n            {\r\n                if(i.image != null) {\r\n                    return ( \r\n                <div className=\"rockets\">\r\n                 <h2>{i.name}</h2>\r\n                <img width=\"500px\" src={i.image}></img>\r\n                <p>{i.launch_service_provider.name}</p>\r\n                <p>{i.pad.name}</p>\r\n                <div className=\"description\">\r\n                    {parseDescription(index)}\r\n                </div>\r\n                <p>Time until: {localDate(i)}</p>\r\n                { <Countdown date={parseDate(i)} /> }\r\n                </div>\r\n                    )\r\n                }\r\n            }\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Launch;","import React, {useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport Header from \"./Header\";\r\nimport Content from \"./Content\";\r\nimport Launch from \"./Launch\";\r\nimport Button from \"./Button\";\r\nimport Countdown from \"./Countdown\";\r\n\r\nconst Main = () => {\r\n    const [launch, setLaunch] = useState();\r\n\r\n    const api_call = async () => {\r\n        const url = `https://spacelaunchnow.me/api/3.5.0/launch/upcoming/?limit=20`;\r\n        const request = axios.get(url);\r\n        const response = await request;\r\n\r\n        console.log(response.data.results)\r\n\r\n        setLaunch(response.data.results);\r\n    }\r\n\r\n    useEffect(api_call, []);\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <Content>\r\n                {launch && <Launch launch={launch}/>}\r\n            </Content>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;","import Wrapper from \"./components/Wrapper\";\nimport Main from \"./components/Main\";\n\nfunction App() {\n  return (\n    <Wrapper>\n      <Main />\n    </Wrapper>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./styles/styles.scss\";\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}